{"version":3,"sources":["utils/helpers.ts","API.ts","components/User/User.tsx","components/Post/Post.tsx","components/Comment/Comment.tsx","components/CommentList/CommentsList.tsx","components/PostList/PostList.tsx","App.tsx","index.tsx"],"names":["ensure","argument","message","undefined","TypeError","posts","fetch","then","response","json","data","users","comments","postsFromServer","Promise","all","result","console","log","map","post","user","find","id","userId","filter","comment","postId","User","name","username","email","address","className","street","suite","city","zipcode","href","Post","title","body","Comment","CommentsList","key","PostList","length","App","searchQuery","useState","setPosts","isLoading","setLoading","inputTextField","changeInputTextField","type","value","onChange","event","target","toLowerCase","includes","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d7806d7.chunk.js","sourcesContent":["export function ensure<T>(\n  argument: T | undefined | null,\n  message = 'This value was promised to be there.',\n): T {\n  if (argument === undefined || argument === null) {\n    throw new TypeError(message);\n  }\n\n  return argument;\n}\n","import { ensure } from './utils/helpers';\n\nconst POSTS_API = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/posts.json';\nconst USERS_API = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/users.json';\nconst COMMENTS_API = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/comments.json';\n\nconst posts = fetch(POSTS_API).then((response): Promise<Post[]> => (\n  response.json()\n    .then(data => data)\n));\n\nconst users = fetch(USERS_API).then((response): Promise<User[]> => (\n  response.json()\n    .then(data => data)\n));\n\nconst comments = fetch(COMMENTS_API).then((response): Promise<Comment[]> => (\n  response.json()\n    .then(data => data)\n));\n\nexport const postsFromServer = Promise.all([posts, users, comments])\n  .then(result => {\n    console.log(result);\n\n    return result[0].map(post => (\n      {\n        ...post,\n        user: ensure(result[1].find(user => user.id === post.userId)),\n        comments: result[2].filter(comment => comment.postId === post.id),\n      }\n    ));\n  });\n","import React from 'react';\nimport './User.css';\n\ntype Props = {\n  name: string;\n  username: string;\n  email: string;\n  address: Address;\n};\n\nconst User: React.FC<Props> = ({\n  name, username, email, address,\n}) => {\n  return (\n    <div className=\"user\">\n      <h2 className=\"user__nick\">\n        {`Post by: ${username}`}\n      </h2>\n      <p className=\"user__contacts\">\n        <span className=\"user__contacts-item\">\n          {name}\n        </span>\n        <br />\n        <span className=\"user__contacts-item\">\n          {`${address.street} ${address.suite}`}\n        </span>\n        <br />\n        <span className=\"user__contacts-item\">\n          {`${address.city} ${address.zipcode}`}\n        </span>\n        <br />\n        <span className=\"user__contacts-item\">\n          <a href={`mailto:${email}`}>\n            {email}\n          </a>\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport './Posts.css';\n\ntype Props = {\n  title: string;\n  body: string;\n};\n\nconst Post: React.FC<Props> = ({ title, body }) => {\n  return (\n    <article className=\"post\">\n      <h2 className=\"post__header\">{title}</h2>\n      <p className=\"post__text\">{body}</p>\n    </article>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport './Comment.css';\n\ntype Props = {\n  name: string;\n  email: string;\n  body: string;\n};\n\nconst Comment: React.FC<Props> = ({ name, email, body }) => {\n  return (\n    <>\n      <div className=\"comment\">\n        <div className=\"comment__name comment__indentation\">\n          <strong>Comment by:</strong> { name }<br />\n        </div>\n        <div className=\"comment__email comment__indentation\">\n          <strong>Email:</strong>\n          <a\n            href={`mailto:${email}`}\n            className=\"comment__email-link comment__indentation\"\n          >\n            {email}\n          </a>\n        </div>\n      </div>\n      <div className=\"comment__text comment__indentation\">\n        {body}\n      </div>\n    </>\n  );\n};\n\nexport default Comment;\n","import React from 'react';\nimport Comment from '../Comment/Comment';\nimport './ComentList.css';\n\ntype Props = {\n  comments: Comment[];\n};\n\nconst CommentsList: React.FC<Props> = ({ comments }) => {\n\n  return (\n    <section>\n      <ul className=\"commentList\">\n        {comments.map(comment => (\n          <li key={comment.id} className=\"commentList__item\">\n            <Comment\n              name={comment.name}\n              email={comment.email}\n              body={comment.body}\n            />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default CommentsList;\n","import React from 'react';\nimport User from '../User/User';\nimport Post from '../Post/Post';\nimport CommentsList from '../CommentList/CommentsList';\nimport './PostList.css';\n\ntype Props = {\n  posts: PostWithUserAndComment[];\n};\n\nconst PostList: React.FC<Props> = ({ posts }) => {\n  console.log(posts.length);\n  return (\n\n    <ul className=\"postList\">\n      {posts.map((post: PostWithUserAndComment) => (\n        <div key={post.id} className=\"postList__wrapper\">\n          <li className=\"postList__item\">\n            <User\n              {...post.user}\n            />\n            <Post\n              {...post}\n            />\n          </li>\n          <CommentsList\n            comments={post.comments}\n          />\n        </div>\n      ))}\n    </ul>\n  );\n};\n\nexport default PostList;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { postsFromServer } from './API';\nimport PostList from './components/PostList/PostList';\n\nconst App = () => {\n  const [posts, setPosts] = useState<PostWithUserAndComment[]>([]);\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [inputTextField, changeInputTextField] = useState<string>('');\n\n  const fetchData = (): void => {\n    setLoading(true);\n    postsFromServer.then(data => {\n      setLoading(false);\n\n      return setPosts(data);\n    });\n  };\n\n  const postFilter = (searchQuery: string): PostWithUserAndComment[] => {\n    if (!searchQuery) {\n      return posts;\n    }\n\n    return posts.filter((post) => {\n      const string = (post.title + post.body).toLowerCase();\n\n      return string.includes(searchQuery);\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Dynamic list of posts</h1>\n      {posts.length > 1\n      && (\n        <input\n          type=\"text\"\n          className=\"app_input\"\n          value={inputTextField}\n          onChange={event => changeInputTextField(event.target.value.toLowerCase())}\n        />\n      )}\n      <PostList posts={postFilter(inputTextField)} />\n      {posts.length === 0\n      && (\n        <button\n          type=\"button\"\n          className=\"app__button\"\n          onClick={() => fetchData()}\n        >\n          {isLoading ? 'Loading...' : 'Get Posts'}\n        </button>\n      )}\n    </div>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}